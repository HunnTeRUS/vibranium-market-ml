version: '3.8'

services:
  app:
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - "8080:8080"
    env_file:
      - cmd/market-vibranium/.env
    depends_on:
      - localstack
    command: sh -c "/market-vibranium"

  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
      - "4575:4575"
    environment:
      - SERVICES=dynamodb,s3

  aws-cli:
    image: amazon/aws-cli
    depends_on:
      - localstack
    entrypoint: /bin/sh -c
    command: >
      "
        aws --endpoint-url=http://localstack:4566 s3api create-bucket --no-sign-request --bucket orders --region us-east-1
        aws --endpoint-url=http://localstack:4566 dynamodb create-table --no-sign-request --region us-east-1 --table-name Wallets --attribute-definitions AttributeName=UserID,AttributeType=S --key-schema AttributeName=UserID,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
        aws --endpoint-url=http://localstack:4566 dynamodb create-table --no-sign-request --region us-east-1 --table-name Orders --attribute-definitions AttributeName=ID,AttributeType=S --key-schema AttributeName=ID,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
      "

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./provisioning/dashboards_json:/var/lib/grafana/dashboards

volumes:
  grafana-storage: